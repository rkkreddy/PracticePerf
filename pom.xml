<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>Paintnite</groupId>
    <artifactId>NextGen</artifactId>
    <version>1.0-SNAPSHOT</version>
    <profiles>
        <profile>
            <id>UAT</id>
            <properties>
                <performancetest.webservice.host>uat-public.paintnite.com</performancetest.webservice.host>
                <performancetest.webservice.port>443</performancetest.webservice.port>
                <performancetest.webservice.protocol>https</performancetest.webservice.protocol>
            </properties>
        </profile>
        <profile>
            <id>TECHLOGIX</id>
            <properties>
                <performancetest.webservice.host>testing-techlogix.paintnite.com</performancetest.webservice.host>
                <performancetest.webservice.port>80</performancetest.webservice.port>
                <performancetest.webservice.protocol>http</performancetest.webservice.protocol>
            </properties>
        </profile>
    </profiles>
    <build>
    <plugins>
        <plugin>
            <groupId>com.lazerycode.jmeter</groupId>
            <artifactId>jmeter-maven-plugin</artifactId>
            <version>1.10.1</version>
            <executions>
                <execution>
                    <id>jmeter-tests</id>
                    <phase>verify</phase>
                    <goals>
                        <goal>jmeter</goal>
                    </goals>
                </execution>
            </executions>
            <configuration>
                <testFilesIncluded>
                    <jMeterTestFile>UAT-Public-Paintnite_V2.jmx</jMeterTestFile>
                </testFilesIncluded>
                <!--
                   By default the test results are saved in a file
                   /target/jmeter/results/<testname>-<timestamp>.jtl
                   Further processing is easier without timestamp though.
                -->
                <testResultsTimestamp>false</testResultsTimestamp>

                <!--
                   To simplify debugging, it is advisable to adapt the loglevel.
                   The jmeter logs are written to the file jmeter.log.
                -->
                <overrideRootLogLevel>DEBUG</overrideRootLogLevel>

                <!--
                   By default, the console output during a jmeter test run is suppressed.
                   We want to display the progress using the listener "Generate Summary Results"
                   (which periodically prints stats to stdout). Therefore we have to make sure,
                   that the jmeter output is not suppressed.
                -->
                <suppressJMeterOutput>false</suppressJMeterOutput>

                <!--
                   If tests fail (e.g. a http-request running into a timeout), the corresponding maven
                   goal also fails (and subsequent goals aren't executed anymore). We want to create graphs
                   from test-results, no matter if some requests failed or not, so we ignore jmeter failures.
                -->
                <ignoreResultFailures>true</ignoreResultFailures>

                <propertiesUser>
                    <webservice.host>${performancetest.webservice.host}</webservice.host>
                    <webservice.port>${performancetest.webservice.port}</webservice.port>
                    <webservice.protocol>${performancetest.webservice.protocol}</webservice.protocol>
                </propertiesUser>
            </configuration>
            <dependencies>
                <dependency>
                    <groupId>kg.apc</groupId>
                    <artifactId>jmeter-plugins</artifactId>
                    <version>1.0.0</version>
                    <exclusions>
                        <!--
                           Unfortunately some transitive dependencies cannot be found on mvncentral
                           and we have to explicitly exclude them.
                           For a complete list, see https://github.com/mlex/jmeter-maven-example/
                       -->
                        <exclusion>
                            <groupId>kg.apc</groupId>
                            <artifactId>perfmon</artifactId>
                        </exclusion>
                        <!-- ... -->

                        <!--
                            Because of a bug in the jmeter-maven-plugin (see
                            https://github.com/Ronnie76er/jmeter-maven-plugin/issues/77) we have to
                            exclude jmeter dependencies here, too.
                        -->
                        <exclusion>
                            <groupId>org.apache.jmeter</groupId>
                            <artifactId>jorphan</artifactId>
                        </exclusion>
                        <!-- ... -->
                    </exclusions>
                </dependency>
            </dependencies>
        </plugin>
    </plugins>
    </build>
</project>